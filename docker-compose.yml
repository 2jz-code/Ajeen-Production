# /docker-compose.yml (Modified for testing self-contained prod image)

version: "3.8"

services:
  db:
    image: postgres:15-alpine # Using a more recent version
    container_name: bakeajeen_pos_db_test
    volumes:
      - postgres_test_data:/var/lib/postgresql/data/
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    ports:
      - "${DB_PORT_ON_HOST}:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_NAME}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # 'redis' service is removed as the backend image contains its own Redis

  backend:
    image: bakeajeen-backend-prod:latest # <-- Use your built production image
    # build: # <-- Remove or comment out the build section
    #   context: ./backend
    #   dockerfile: Dockerfile
    container_name: bakeajeen_pos_backend_test
    volumes:
      # - ./backend:/app # Ensure code mounting is OFF for prod image test
      - ./backend/media:/app/media
    ports:
      - "8000:80"
    env_file:
      - ./.env
    depends_on:
      db:
        condition: service_healthy
      # 'redis' dependency removed

volumes:
  postgres_test_data:
  # redis_data: # Can also be removed if the redis service is removed
