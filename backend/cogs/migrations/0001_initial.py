# Generated by Django 5.1.5 on 2025-05-25 03:21

import django.db.models.deletion
from decimal import Decimal
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('products', '0003_product_barcode'),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('item_type', models.CharField(choices=[('RAW_MATERIAL', 'Raw Material'), ('PACKAGING', 'Packaging'), ('PREPARED_GOOD', 'Prepared Good'), ('OTHER_DIRECT_COST', 'Other Direct Cost')], default='RAW_MATERIAL', max_length=20)),
                ('current_cost_per_unit', models.DecimalField(decimal_places=6, default=Decimal('0.000000'), help_text='Cost per costing_unit. For RAW_MATERIAL/PACKAGING, calculated from purchase. For PREPARED_GOOD, from its recipe.', max_digits=12)),
                ('latest_purchase_price', models.DecimalField(blank=True, decimal_places=2, help_text='e.g., 25.00', max_digits=10, null=True)),
                ('latest_purchase_quantity', models.DecimalField(blank=True, decimal_places=3, help_text='e.g., 22.680', max_digits=10, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='e.g., Kilogram, Gram, Liter, Milliliter, Piece, Each', max_length=50, unique=True)),
                ('abbreviation', models.CharField(help_text='e.g., kg, g, L, mL, pc, ea', max_length=20, unique=True)),
                ('is_base_unit', models.BooleanField(default=False, help_text='Is this a fundamental unit for its type (e.g., gram for weight)?')),
                ('base_unit_equivalent', models.DecimalField(decimal_places=4, default=Decimal('1.0'), help_text='For unit conversion: How many of the smallest common unit (e.g., grams) does this unit represent?', max_digits=10)),
            ],
        ),
        migrations.CreateModel(
            name='ProductCOGS',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('notes', models.TextField(blank=True, null=True)),
                ('total_components_cost', models.DecimalField(decimal_places=6, default=Decimal('0.000000'), editable=False, max_digits=12)),
                ('waste_factor_percentage', models.DecimalField(decimal_places=2, default=Decimal('0.00'), help_text='e.g., 5.00 for 5% waste. Applied to total_components_cost.', max_digits=5)),
                ('final_cogs_per_unit', models.DecimalField(decimal_places=6, default=Decimal('0.000000'), editable=False, help_text='Total COGS for one unit of the product, including waste.', max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('product', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='cogs_profile', to='products.product')),
            ],
        ),
        migrations.CreateModel(
            name='Recipe',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text="e.g., 'Standard Pizza Dough Batch', 'Tomato Sauce v2'", max_length=255, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('yield_quantity', models.DecimalField(decimal_places=3, help_text="How much of 'produces_item' does one batch of this recipe make?", max_digits=10)),
                ('total_components_cost', models.DecimalField(decimal_places=6, default=Decimal('0.000000'), editable=False, help_text='Calculated total cost of all components for one batch.', max_digits=12)),
                ('calculated_cost_per_produced_unit', models.DecimalField(decimal_places=6, default=Decimal('0.000000'), editable=False, max_digits=12)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('produces_item', models.OneToOneField(limit_choices_to={'item_type': 'PREPARED_GOOD'}, on_delete=django.db.models.deletion.PROTECT, related_name='defining_recipe', to='cogs.inventoryitem')),
            ],
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='source_recipe',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='produced_inventory_item_link', to='cogs.recipe'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='costing_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='inventory_items_costed_in_this_unit', to='cogs.unitofmeasure'),
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='latest_purchase_unit',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inventory_items_purchased_in_this_unit', to='cogs.unitofmeasure'),
        ),
        migrations.CreateModel(
            name='RecipeComponent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, max_digits=10)),
                ('inventory_item', models.ForeignKey(help_text='The ingredient or component item', on_delete=django.db.models.deletion.PROTECT, to='cogs.inventoryitem')),
                ('recipe', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='components', to='cogs.recipe')),
                ('quantity_unit', models.ForeignKey(help_text='Unit for the quantity field, e.g., grams, ml, pieces', on_delete=django.db.models.deletion.PROTECT, to='cogs.unitofmeasure')),
            ],
            options={
                'unique_together': {('recipe', 'inventory_item')},
            },
        ),
        migrations.CreateModel(
            name='ProductCOGSComponentLink',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=3, help_text='How much of this item is used for one unit of the final product.', max_digits=10)),
                ('calculated_cost', models.DecimalField(decimal_places=6, default=Decimal('0.000000'), editable=False, help_text='Cost of this component for one unit of the product.', max_digits=12)),
                ('inventory_item', models.ForeignKey(help_text='The component item used in the final product.', on_delete=django.db.models.deletion.PROTECT, to='cogs.inventoryitem')),
                ('product_cogs', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='cogs.productcogs')),
                ('quantity_unit', models.ForeignKey(help_text='Unit for the quantity field (e.g., grams, ml, pieces).', on_delete=django.db.models.deletion.PROTECT, to='cogs.unitofmeasure')),
            ],
            options={
                'unique_together': {('product_cogs', 'inventory_item')},
            },
        ),
    ]
