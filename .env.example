# .env.example - Configuration for Ajeen POS and Website
# Copy this file to .env and fill in your actual values for local development.
# NEVER commit your actual .env file containing secrets to Git.

# --- PostgreSQL Database ---
# Used by docker-compose.yml and backend (settings.py)
POSTGRES_DB=ajeen_pos_db_dev
POSTGRES_USER=admin_dev
POSTGRES_PASSWORD=replace_with_your_secure_dev_db_password
POSTGRES_HOST=db # For backend service to connect to db service in Docker
# POSTGRES_HOST=localhost # If backend runs outside Docker and DB is exposed on localhost
POSTGRES_PORT=5432

# --- Django Backend ---
# Used by docker-compose.yml and backend (settings.py)
DJANGO_SECRET_KEY=replace_with_a_strong_random_secret_key_for_development
DEBUG=True # Set to False in production
DJANGO_ALLOWED_HOSTS=localhost 127.0.0.1 backend your_dev_domain.com # Space separated
# For production, this would be your actual domain(s): api.yourdomain.com admin.yourdomain.com

# --- Django Superuser (Initial Setup) ---
# Used by docker-compose.yml (backend entrypoint script)
DJANGO_SUPERUSER_USERNAME=admin
DJANGO_SUPERUSER_PASSWORD=replace_with_a_strong_dev_superuser_password
DJANGO_SUPERUSER_EMAIL=admin@example.com

# --- CORS & CSRF ---
# Used by docker-compose.yml and backend (settings.py)
# Comma-separated for CORS_ALLOWED_ORIGINS
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://127.0.0.1:3000,http://127.0.0.1:5173,https://your_dev_frontend_domain.com
# Space-separated for CSRF_TRUSTED_ORIGINS (must include scheme)
CSRF_TRUSTED_ORIGINS=http://localhost:3000 http://localhost:5173 http://127.0.0.1:3000 http://127.0.0.1:5173 https://your_dev_frontend_domain.com
# For production, these would be: https://pos.yourdomain.com,https://www.yourdomain.com

# --- Stripe Payments ---
# Used by docker-compose.yml, backend (settings.py), and frontends (vite.config.js, StripeContext.jsx)
# Use your Stripe TEST keys for development
STRIPE_PUBLISHABLE_KEY=pk_test_YOUR_STRIPE_TEST_PUBLISHABLE_KEY
STRIPE_SECRET_KEY=sk_test_YOUR_STRIPE_TEST_SECRET_KEY
STRIPE_WEBHOOK_SECRET=whsec_YOUR_STRIPE_TEST_WEBHOOK_SECRET

# --- Redis Cache & Channels ---
# Used by docker-compose.yml and backend (settings.py)
REDIS_URL=redis://redis:6379/1 # 'redis' is the service name in docker-compose

# --- Email (Example with SendGrid) ---
# Used by docker-compose.yml and backend (settings.py) if email backend is SMTP
# For development, backend defaults to console email.
# SENDGRID_API_KEY=YOUR_SENDGRID_API_KEY_IF_USED
# DEFAULT_FROM_EMAIL=noreply@yourrestaurant.com

# --- POS Frontend (Vite) ---
# Used by docker-compose.yml (pos service) and pos (vite.config.js)
# These often mirror backend settings for local development
VITE_API_BASE_URL=http://localhost:8000/api/pos # Default if served through Nginx at /api/pos/
# VITE_API_BASE_URL=http://localhost:8000/api # If backend API root is just /api/
VITE_WS_URL=ws://localhost:8000/ws # WebSocket URL for kitchen/hardware proxy
VITE_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY} # Uses the same Stripe key defined above
VITE_HARDWARE_AGENT_URL=http://localhost:8082 # URL for POS to contact local hardware agent
# VITE_PORT=5173 # Port for Vite dev server (if not using Docker's mapped port directly)
# VITE_SIMULATE_TERMINAL=true # Set to true to use simulated terminal features

# --- Website Frontend (React) ---
# Used by docker-compose.yml (website service) and website (api.js, StripeContext.jsx)
REACT_APP_API_BASE_URL=http://localhost:8000/api/website # API for the customer website
REACT_APP_STRIPE_PUBLISHABLE_KEY=${STRIPE_PUBLISHABLE_KEY} # Uses the same Stripe key

# --- Hardware Agent (If backend needs to know its URL, otherwise primarily for POS frontend) ---
# Used by docker-compose.yml (backend service) and backend (settings.py)
# This is the URL the POS frontend will try to connect to the hardware agent on the local machine.
# The backend might also use this if it ever needed to directly communicate *to* an agent (less common).
HARDWARE_AGENT_URL=http://localhost:8082

# --- Delivery Service (Placeholder from delivery/client.py) ---
# If you integrate a real delivery service, add its credentials here
# HYPOTHETICAL_DELIVERY_API_KEY=
# HYPOTHETICAL_DELIVERY_API_BASE_URL=

# --- General Application Settings (Example) ---
# TIME_ZONE=America/Chicago # Example: Set your application's timezone in settings.py (can be env var)
# DEFAULT_LOCATION_ID=1 # Used in backend/settings.py

# --- Docker Compose Specific ---
# These are not typically used by the application code directly but control docker-compose behavior
# COMPOSE_PROJECT_NAME=ajeen_pos_system # Optional: sets a project name for Docker
# You can also specify versions for images if needed, e.g.
# POSTGRES_IMAGE_TAG=15
# NGINX_IMAGE_TAG=latest
# REDIS_IMAGE_TAG=alpine